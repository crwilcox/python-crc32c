# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

# on:
#   release:
#     types: [created]

on:
  pull_request:
    branches:
      - master

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
    - name: Build
      run: |
        ./scripts/manylinux/build.sh
    - uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: ./dist/*
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
    - name: Build
      run: |
        ./scripts/osx/build.sh
    - uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: ./dist/*
        
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
    - name: Build
      run: |
        ./scripts/windows/build.bat
    - uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: ./dist/*

  publish:
    needs:
      - build-linux
      - build-macos
      - build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v2
        with:
          name: python-package-distributions
          path: dist/
      - name: What will we publish?
        run: ls dist
      - name: Publish
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          repository_url: https://test.pypi.org/legacy/
